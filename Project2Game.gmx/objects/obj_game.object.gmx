<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables
global.one_second = room_speed;
instance_create(x,y,obj_input);

var _font_string = "ABCDEFGHIJKLMNOPQRSTUVWXYZ.abcdefghijklmn√±opqrstuvwxyz1234567890&gt;,?!':-+*";
global.font = font_add_sprite_ext(spr_font, _font_string, true, 1);
draw_set_font(global.font);

global.dont_delay = true;
global.event = 0;

global.player_max_health = 4;
global.player_health = global.player_max_health;

global.player_max_stamina = 4;
global.player_stamina = global.player_max_stamina;

global.player_max_shield = 4;
global.player_shield = global.player_max_shield;

global.player_start_position = inst_game_start;

global.gems = 0;

audio_play_sound(a_music, 10, true);
var _view_width =  view_wview[0];
var _view_height =  view_hview[0];
display_set_gui_size(_view_width, _view_height);

paused_ = false;
paused_sprite_ = noone;
paused_sprite_scale_ = display_get_gui_width()/view_wport[0];

save_data = ds_map_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset Sliding View
obj_player.view_x = view_xview;
obj_player.view_y = view_yview;
obj_player.view_x1 = obj_player.view_x;
obj_player.view_y1 = obj_player.view_y;
global.dont_delay = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>109</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move_to</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>view_xview[0] + 100</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>view_yview[0] + 100</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toggle Pause
if obj_input.pause_pressed {
    if paused_ {
        paused_ = false;
        if sprite_exists(paused_sprite_) {
            sprite_delete(paused_sprite_);
        }
        instance_activate_region(view_xview[0],view_yview[0],view_wview[0],view_hview[0],true);
        audio_play_sound(a_unpause, 5, false);
    } else {
        paused_ = true;
        paused_sprite_ = sprite_create_from_surface(application_surface, 0, 0, view_wport[0], view_hport[0], false, false, 0, 0);
        instance_deactivate_all(true);
        instance_activate_object(obj_input);
        audio_play_sound(a_pause, 5, false);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Deactivate Outside View
if not paused_ {
    instance_activate_all();
    obj_input.x = view_xview[0] + 100;
    obj_input.y = view_yview[0] + 100;
    instance_deactivate_region(view_xview[0],view_yview[0],view_wview[0],view_hview[0],false,true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn Player at start position
if instance_exists(global.player_start_position){
    if instance_exists(obj_player){
        obj_player.persistent = false;
        if instance_exists(obj_player.carrying_) obj_player.carrying_.persistent = false;
        obj_player.x = global.player_start_position.x;
        obj_player.y = global.player_start_position.y;
    } else {
        var _start_x = global.player_start_position.x;
        var _start_y = global.player_start_position.y;
        instance_create(_start_x, _start_y, obj_player);
    }
    global.player_start_position = noone;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go to next room
room_goto_next();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw UI
var _gui_width =  display_get_gui_width();
var _gui_height =  display_get_gui_height();
if room != rm_menu &amp;&amp; room != rm_credits &amp;&amp; room != rm_cutscene{
    if sprite_exists(paused_sprite_) {
        draw_sprite_ext(paused_sprite_, 0, 0, 0, paused_sprite_scale_, paused_sprite_scale_, 0, c_white, 1);
        draw_set_alpha(0.6);
        draw_rectangle_colour(0, 0, _gui_width, _gui_height, c_black, c_black, c_black, c_black, false)
        draw_set_alpha(1);
    }
    
    for (var _i=0; _i&lt;global.player_max_health; _i++){
        var _filled = _i &lt; global.player_health;
        draw_sprite(spr_heart_ui,_filled, 4+15*_i, 4);
    }
    
    for (var _i=0; _i&lt;global.player_max_shield; _i++){
        var _filled = _i &lt; global.player_shield;
        draw_sprite(spr_stamina_ui,_filled, 4+15*_i, 15);
    }
    draw_set_colour(c_white);
    var _gem_string = string(global.gems);
    var _text_width = string_width(_gem_string);
    var _x = _gui_width - _text_width + 4;
    var _y = _gui_height - 16 + 4;
    draw_sprite(spr_gem, 0, _x-16, _y+5);
    draw_text(_x-8, _y-1, _gem_string);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
