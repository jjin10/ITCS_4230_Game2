<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
initialize_movement_entity(0.5, 1, obj_wall);
initialize_hurtbox_entity();
PICKED_UP = 0;
depth = -y;
drop_x_ = x;
drop_y_ = y;
thrown_ = false;
z_ = 0;
z_speed_ = -4;
gravity_ = 0.5;
can_pickup_ = false;
opened_ = false;
audio_play_sound(a_item, 2, false);
/*
x_key_ = save_date_get_key()+"x";
y_key_ = save_date_get_key()+"y";

var _x_data =  ds_map_find_value(obj_game.save_data, x_key_); 
var _y_data =  ds_map_find_value(obj_game.save_data, y_key_); 

if _x_data &gt; 0 &amp;&amp; _y_data &gt; 0{
    x = _x_data;
    y = _y_data;
}

*/
dir_facing_ = dir.right;

enum item {
    ground,
    picked_up
}

starting_state_ = item.ground;
state_ = starting_state_;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Rise in Z axis
if not instance_exists(obj_player) exit;

if PICKED_UP == 0 {
    depth = -y;
    z_ += z_speed_;
    z_speed_ += gravity_;
    if z_ &gt;= 0 {
        can_pickup_ = true;
        var _bounce_amount = 0.25;
        z_speed_ = -z_speed_ * _bounce_amount;
        
        if z_speed_ &gt; -1 {
            z_speed_ = 0;
            z_ = 0;
        }
    }
    if thrown_ {
        x = lerp(x, drop_x_, 0.1);
        y = lerp(y, drop_y_, 0.1);
        //_x_data = ds_map_replace(obj_game.save_data, x_key_, x);
        //_y_data = ds_map_replace(obj_game.save_data, y_key_, y);
    }
} else {
    x = obj_player.x;
    y = obj_player.y;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_col">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Picked Up
if can_pickup_ &amp;&amp; other.sprite_index == spr_pickup_col{
    PICKED_UP = 1;
    //obj_player.carrying_ = id;
}
event_user(PICKED_UP);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Picked Up State
depth = -y*2;
obj_player.state_ = player.carry;
obj_player.carrying_ = self;
can_pickup_ = false;
z_ = -16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Grounded State
if z_ == 0 {
    can_pickup_ = true;
    thrown_ = false;
}

move_movement_entity(true);
apply_friction_to_movement_entity();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Sprite
if not instance_exists(obj_player) exit;

if PICKED_UP == 1 {
    draw_sprite(sprite_index, image_index, obj_player.x, obj_player.y+z_);
} else {
    draw_sprite(sprite_index, image_index, x, y+z_);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
